import torch
import requests

def get_public_ip():  
    response = requests.get('https://api64.ipify.org?format=json')  
    if response.status_code == 200:  
        return response.json()['ip']  
    else:  
        return None  
NUM_GPUS=torch.cuda.device_count()
public_ip = get_public_ip()  
NODE_URL = f"http://{public_ip}"
SERVER_URL=f""

MAX_EPOCHS = 10
MAX_DATSET_NUM_ROWS = 5_000_000
MAX_MODEL_SIZE = 15_000_000_000
MIN_MODEL_SIZE = 500_000_000
DEFAULT_CHECKPOINT_STEPS = 200
MIN_MICRO_BATCH_SIZE = 2
MIN_EVAL_BATCH_SIZE = 2
MIN_SEQUENCE_LEN = 256
MAX_SEQUENCE_LEN = 2048
MIN_MAX_STEPS = 500
MIN_ACCUMULATION_STEPS = 4
MIN_EARLY_STOPPING_PATIENCE = 3
MODEL_SIZE_TO_TIME_RATE = 7
DEFAULT_NUM_EPOCHS = 10
DEFAULT_VAL_SET_SIZE = 0.05
MAX_VAL_DATASET_EXAMPLES = 10_000
MIN_VAL_DATASET_EXAMPLES = 1_000

MAX_VAL_DATASET_EXAMPLES_INSTRUCT = 10_000
MIN_VAL_DATASET_EXAMPLES_INSTRUCT = 500

MAX_VAL_DATASET_EXAMPLES_DPO = 5_000
MIN_VAL_DATASET_EXAMPLES_DPO = 500


MAX_VAL_DATASET_EXAMPLES_GRPO = 5_000
MIN_VAL_DATASET_EXAMPLES_GRPO = 500

MAX_VAL_DATASET_EXAMPLES_LARGE_MODELS = 500
MIN_VAL_DATASET_EXAMPLES_LARGE_MODELS = 100

MAX_VAL_DATASET_EXAMPLES_GRPO_SMALL_INSTANCE = 100
MIN_VAL_DATASET_EXAMPLES_GRPO_SMALL_INSTANCE = 10
MAX_VAL_DATASET_EXAMPLES_GRPO_LARGE_INSTANCE = 5_000
MIN_VAL_DATASET_EXAMPLES_GRPO_LARGE_INSTANCE = 500
DEFAULT_LEARNING_RATE = 0.0001
QLORA_MODEL_SIZE = 25_000_000_000
ONE_GPU_MODEL_SIZE = 5_000_000_000
UNSLOTH_ONE_GPU_MODEL_SIZE_FOR = 7_000_000_000
TWO_GPU_MODEL_SIZE = 12_000_000_000
FOUR_GPU_MODEL_SIZE = 12_000_000_000

EXTREMELY_SMALL_MODEL_SIZE = 1_000_000_000
SMALL_MODEL_SIZE = 5_000_000_000
MEDIUM_MODEL_SIZE = 8_000_000_000
BIG_MODEL_SIZE = 16_000_000_000
LARGE_MODEL_SIZE = 25_000_000_000
EXTREMELY_LARGE_MODEL_SIZE = 70_000_000_000
DEFAULT_UPLOAD_SPEED = 50_000_000